@page "/Profile"
@using MudBlazor
@using Radzen
@using SeraBarber.BusinessObjects
@using SeraBarber.Services
@inject Radzen.DialogService DialogService
@using Variant = MudBlazor.Variant
@inject SupabaseService SupabaseService
@inject Radzen.NotificationService NotificationService

<style>
  /* Container max width and center */
  .profile-container {
    max-width: 800px;
    margin: 0 auto;
  }

  /* Field styling: full width on small screens, 50% width on >=600px and centered */
  .profile-field {
    display: block;            /* make wrapper a block so width/margin work */
    margin: 0 auto 1rem;      /* center horizontally and add bottom gap */
    width: 100%;
    max-width: 420px;         /* prevents fields from growing too large on very wide screens */
    box-sizing: border-box;
  }

  @@media (min-width: 600px) {
    .profile-field {
      width: 50%;
    }

    .save-button {
      width: 50%;
    }
  }

  /* Save button styling - centered and same width as fields */
  .save-button {
    display: block;
    margin: 1rem auto 0;
    width: 100%;
    max-width: 420px;
  }
</style>

@if (_isLoading)
{
    <p>Loading profile...</p>
}
else
{
    <MudPaper Class="pa-6 profile-container" Elevation="2">
        <MudStack Spacing="3" Class="w-100">
            <MudText Typo="Typo.h5" Align="Align.Center">Στοιχεία Χρήστη</MudText>

            <MudGrid Justify="Justify.Center" Spacing="3">
                <!-- each MudItem takes the full row, CSS makes the inner field half-width & centered -->
                <MudItem xs="12">
                    <MudTextField @bind-Value="_name" Label="Όνομα"
                                  Variant="Variant.Outlined"
                                  Class="profile-field" />
                </MudItem>

                <MudItem xs="12">
                    <MudTextField @bind-Value="_email" Label="Email"
                                  Variant="Variant.Outlined"
                                  Class="profile-field"
                                  Disabled="true" />
                </MudItem>

                <MudItem xs="12">
                    <MudTextField @bind-Value="_phoneNumber" Label="Τηλέφωνο"
                                  Variant="Variant.Outlined"
                                  Class="profile-field" 
                                  AdornmentText="+30"
                                  Adornment="Adornment.Start"
                                  />
                </MudItem>
            </MudGrid>
            <MudExpansionPanels Class="profile-field">
                <MudExpansionPanel Text="Τα Ραντεβού μου" Expanded="true">
                    <MudList T="Appointment">
                        @if (_appointments.Any())
                        {
                            @foreach (var appt in _appointments)
                            {
                                var ampm = appt.Time.Hours >= 12 ? "μ.μ." : "π.μ.";
                                <MudListItem T="Appointment" >
                                    <div style="display:flex; justify-content:space-between; align-items:center; width:100%;">
                                        <!-- Appointment text on the left -->
                                        <span>@($"{appt.Day:dd/MM/yyyy} - {appt.Time.Hours:D2}:{appt.Time.Minutes:D2} {ampm}")</span>

                                        <!-- Cancel button pinned to the far right -->
                                        <MudButton Color="Color.Error"
                                                   Variant="Variant.Text"
                                                   Size="Size.Small"
                                                   OnClick="@(() => CancelAppointment(appt))">
                                            Ακύρωση
                                        </MudButton>
                                    </div>
                                </MudListItem>
                            }
                        }
                        else
                        {
                            <MudListItem>Δεν βρέθηκε ραντεβού</MudListItem>
                        }
                    </MudList>
                </MudExpansionPanel>
            </MudExpansionPanels>



            <MudButton Variant="Variant.Filled" Color="Color.Primary"
                       OnClick="SaveProfile" Class="save-button">
                Αποθήκευση
            </MudButton>
        </MudStack>
    </MudPaper>
}

@code {
    private IList<Appointment> _appointments;
    private bool _isLoading = true;

    private string _name= string.Empty;
    private string _email= string.Empty;
    private string _phoneNumber = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await SupabaseService.InitializeAsync();

        var user = SupabaseService.GetCurrentUser();
        _appointments = await SupabaseService.GetCurrentUserAppointmentsAsync();

        if (user != null)
        {
            if (user.UserMetadata.TryGetValue("name", out var nameValue))
                _name = nameValue?.ToString() ?? string.Empty;
            else
                _name = string.Empty;

            _email = user.Email ?? string.Empty;

            if (user.UserMetadata.TryGetValue("phone_number", out var phoneValue))
                _phoneNumber = phoneValue?.ToString() ?? string.Empty;
            else
                _phoneNumber = string.Empty;
        }

        _isLoading = false;
    }

    private async Task SaveProfile()
    {
        // await SupabaseService.UpdateUserMetadataAsync(new Dictionary<string, object>
        // {
        //     { "name", _name },
        //     { "phone_number", _phoneNumber }
        // });

            NotificationService.Notify(NotificationSeverity.Success, "Επιτυχία", "Τα στοιχεία αποθηκεύτηκαν!");
    }

    private async Task CancelAppointment(Appointment appt)
    {
        var confirmOptions = new ConfirmOptions()
        {
            CancelButtonText = "Ακύρωση",
        };
        bool? confirmed = await DialogService.Confirm("Θέλετε να διαγράψετε το ραντεβού;", "Επιβεβαίωση",confirmOptions);
        if (confirmed != true) return; 
        Console.WriteLine($"canceled {appt.Id}");
    }

}
